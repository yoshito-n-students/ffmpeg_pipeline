<library path="ffmpeg_controllers">

    <class name="ffmpeg_controllers/AudioConverterFilter"
           type="ffmpeg_controllers::AudioConverterFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and export the converted audio frame on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/AudioFifoFilter"
           type="ffmpeg_controllers::AudioFifoFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and export the converted audio frame on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/CompressedImageBroadcaster"
           type="ffmpeg_controllers::CompressedImageBroadcaster"
           base_class_type="controller_interface::ControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Packet from the state interface owned by other controller
            and publishes it as sensor_msgs::msg::CompressedImage.
        </description>
    </class>

    <class name="ffmpeg_controllers/EncoderFilter"
           type="ffmpeg_controllers::EncoderFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and export encoded packets as ffmpeg_cpp::Packet on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/FrameWriter"
           type="ffmpeg_controllers::FrameWriter"
           base_class_type="controller_interface::ControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and write it to the command interface owned by the hardware.
        </description>
    </class>

    <class name="ffmpeg_controllers/ImageBroadcaster"
           type="ffmpeg_controllers::ImageBroadcaster"
           base_class_type="controller_interface::ControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and publishes it as sensor_msgs::msg::Image.
        </description>
    </class>

    <class name="ffmpeg_controllers/PacketBroadcaster"
           type="ffmpeg_controllers::PacketBroadcaster"
           base_class_type="controller_interface::ControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Packet from the state interface owned by other controller
            and publishes it as ffmpeg_pipeline_msgs::msg::Packet.
        </description>
    </class>

    <class name="ffmpeg_controllers/PacketReceiver"
           type="ffmpeg_controllers::PacketReceiver"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller subscribes ffmpeg_pipeline_msgs::Packet
            and export it as ffmpeg_cpp::Packet on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/PacketWriter"
           type="ffmpeg_controllers::PacketWriter"
           base_class_type="controller_interface::ControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Packet from the state interface owned by other controller
            and write it to the command interface owned by the hardware.
        </description>
    </class>

    <class name="ffmpeg_controllers/ParameterBasedDecoderFilter"
           type="ffmpeg_controllers::ParameterBasedDecoderFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Packet from the state interface owned by other controller
            and export decoded frames as ffmpeg_cpp::Frame on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/ParserBasedDecoderFilter"
           type="ffmpeg_controllers::ParserBasedDecoderFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Packet from the state interface owned by other controller
            and export decoded frames as ffmpeg_cpp::Frame on the state interface owned by this controller.
        </description>
    </class>

    <class name="ffmpeg_controllers/VideoConverterFilter"
           type="ffmpeg_controllers::VideoConverterFilter"
           base_class_type="controller_interface::ChainableControllerInterface">
        <description>
            This controller reads ffmpeg_cpp::Frame from the state interface owned by other controller
            and export the converted video frame on the state interface owned by this controller.
        </description>
    </class>

</library>